{"id":20,"name":"projetoBus","agents":[{"archClass":"jason.Argo","name":"agentBus","sourceCode":"serialPort(ttyEmulatedPort0).\t\t/* when using the simulIDE */\n//serialPort(ttyUSB0).\t\t\t/* when using an arduino board */\n\n!start.\n\n+!start: serialPort(Port) <-\n\t.port(Port); \n\t.limit(1000); \n\t.percepts(open).\n\n+catraca(S) <-\n\t.wait(500);\n\t.send(agentBusC, achieve, catraca(S)).\n\n+stop(P) <-\n\t.send(agentBusC, achieve, bus(P)).\n"},{"archClass":"Communicator","name":"agentBusC","sourceCode":"//.connectCN(\"skynet.chon.group\", 5500, \"ba0cd5ba-70ab-49b7-90b3-2bedac71a8da\");\n\nmyUUID(\"ba0cd5ba-70ab-49b7-90b3-2bedac71a8da\").\n\npassageiros(0).\nstatus(ativo).\nlinha(1). //centro\ncapacidadeTotal(5).\nvaga(disponivel).\nvalorPassagem(5.50).\nlat(-22.238751).\nlog(-42.521281).\n\n!start.\n\n\n+!connect: hermes::contextNetConfiguration(_,_,_,_,\"true\",_) <- .disconnectCN; .print(\"DEsconectado...\"); .wait(1000); !connect.\n+!connect: not hermes::contextNetConfiguration(_,_,_,_,\"true\",_) <- .connectCN(\"192.168.64.71\", 5500, \"ba0cd5ba-70ab-49b7-90b3-2bedac71a8da\"); .print(\"connectado\"); .wait(2000).\n\n+!start<-\n\t!connect;\n\t?linha(L);\n\t?myUUID(U);\n\t?lat(Lat);\n\t?log(Log);\n\t?vaga(V);\n\t?valorPassagem(Vp);\n\t.sendOut(\"0a99ff05-1308-41a3-a752-173224698233\",tell, [valorP(Vp),loc(Lat,Log),vaga(V),onibusOne(L,U)]);\n.\n\n\n+!catraca(in): passageiros(P) & capacidadeTotal(C) & status(ativo) & P <  C <-\n    -passageiros(P);\n     P1 = P + 1;\n    +passageiros(P1);\n    .print(\"Numero de passageiros: \", P1);\n    !connect;\n    .sendOut(\"0a99ff05-1308-41a3-a752-173224698233\",achieve, ocupacao(P1));\n.\n   \n\n+!catraca(in) : passageiros(P) & capacidadeTotal(C) & status(ativo) & P >= C <-\n    \t-+vaga(indisponivel);\n     \t.print(\"Onibus lotado\").\n\n+!catraca(out) : passageiros(P) & status(ativo) <-\n\t-passageiros(P);\n\tP1 = P - 1;\n\t+passageiros(P1);\n\t.print(\"Passageiro saiu. Total atualizado: \", P1).\n    \n\n\n+!bus(stop) : status(ativo) <-\n\t.print(\"ALERTA: ônibus parado por falha!\");\n\t-status(ativo);\n\t+status(parado).\n\n\n+!catraca(in) : status(parado) <-\n\t.print(\"Ônibus parado. Entrada ignorada.\").\n\n+!catraca(out) : status(parado) <-\n\t.print(\"Ônibus parado. Saída ignorada.\").\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}],"firmwares":[]}